# name: Update MAINTAINERS.yaml

# on:
#   pull_request:
#     types: [opened]
#     paths:
#       - 'CODEOWNERS'

# jobs:
#   update-maintainers:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0

#       - name: Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '14'

#       - name: Install js-yaml
#         run: npm install js-yaml@3.14.1

#       - name: Get added codeowner
#         id: codeowner
#         run: |
#           ADDED_CODEOWNER=$(git diff origin/${{ github.base_ref }} -- CODEOWNERS | grep '^+' | grep -v '^\+\+ ' | grep -v '^-[^+]' | awk '{print $NF}' | tr -d '@')
#           echo "ADDED_CODEOWNER=$ADDED_CODEOWNER" >> $GITHUB_ENV
#           echo "Added Codeowner: $ADDED_CODEOWNER"

#       - name: Get repository name
#         id: get-repo-name
#         run: |
#           REPO_NAME=$(basename ${{ github.repository }})
#           echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
#           echo "Repository Name: $REPO_NAME"

#       - name: Update MAINTAINERS.yaml
#         if: env.ADDED_CODEOWNER && env.REPO_NAME
#         run: |
#           echo "Updating MAINTAINERS.yaml with added codeowner"
#           echo "${{ steps.codeowner.outputs.ADDED_CODEOWNER }}" > added_codeowner.txt      
#           echo "const fs = require('fs');
#           const yaml = require('js-yaml');

#           const addedCodeowner = process.env.ADDED_CODEOWNER;

#           // Skip adding certain users
#           const excludedUsers = ['asyncapi-bot', 'asyncapi-bot-eve'];
#           if (excludedUsers.includes(addedCodeowner)) {
#             console.log('Skipping update for excluded user:', addedCodeowner);
#             process.exit(0);
#           }

#           const maintainers = yaml.safeLoad(fs.readFileSync('MAINTAINERS.yaml', 'utf8'));
#           const repoName = process.env.REPO_NAME;

#           const newMaintainer = maintainers.find(maintainer => maintainer.name === addedCodeowner);

#           if (!newMaintainer) {
#             const newMaintainer = {
#               name: '',
#               github: addedCodeowner,
#               slack: '',
#               availableForHire: false,
#               company: '',
#               isTscMember: false,
#               repos: [repoName]
#             };

#             maintainers.push(newMaintainer);

#             const updatedYaml = yaml.safeDump(maintainers);
#             fs.writeFileSync('MAINTAINERS.yaml', updatedYaml);
#             console.log('MAINTAINERS.yaml updated with new maintainer:', addedCodeowner);
#           } else {
#             console.log('Maintainer', addedCodeowner, 'already exists in MAINTAINERS.yaml. Skipping update.');
#           }
#           " | node
#           cat MAINTAINERS.yaml

#           rm added_codeowner.txt

      # - name: Commit and push changes
      #   run: |
      #     git config user.name "github-actions"
      #     git config user.email "github-actions@github.com"
      #     git add MAINTAINERS.yaml
      #     git commit -m "Update MAINTAINERS.yaml"
      #     git push origin HEAD:${{ github.base_ref }}



on:
  pull_request:
    types: [closed]
    paths:
      - '.github/CODEOWNERS'

jobs:
  check:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          ref: main
          path: testRepo-main

      - name: Checkout one commit before last one
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          ref: main
          path: testRepo

      - run: cd testRepo && git checkout HEAD^

      - name: Compare files
        id: compare-files
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            const main_file = fs.readFileSync('./testRepo-main/.github/CODEOWNERS', 'utf8').split('\n');
            const pr_file = fs.readFileSync('./testRepo/.github/CODEOWNERS', 'utf8').split('\n');

            let changes = [];

            main_file.forEach((line, i) => {
                if(line !== pr_file[i]){
                    changes.push(`Line ${i + 1}: ${line}`);
                }
            });

            return changes;

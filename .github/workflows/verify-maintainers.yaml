name: Verify Maintainers Changes

on:
  pull_request:
    types: [synchronize, opened]
    paths:
      - "Maintainers.yaml"

jobs:
  verify-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          path: main-branch

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          path: pr-branch

      - name: Install Dependencies
        run: npm install yaml

      - name: Verify changes in Maintainers.yaml
        id: verify-changes
        uses: actions/github-script@v6
        with:
          script: |
            const yaml = require("yaml");
            const fs = require("fs");

            const mainFile = yaml.parse(fs.readFileSync("./main-branch/Maintainers.yaml", "utf8"));
            const prFile = yaml.parse(fs.readFileSync("./pr-branch/Maintainers.yaml", "utf8"));

            const beforeSet = new Set(mainFile.map((maintainer) => maintainer.name));
            const afterSet = new Set(prFile.map((maintainer) => maintainer.name));

            let isCriticalChangeDetected = false;
            const { owner, repo } = context.repo;

            for (const maintainer of prFile) {
              if (!beforeSet.has(maintainer.name)) {
                core.error(`Critical changes have been made to Maintainers.yaml by ${maintainer.name}. A new maintainer object has been added. Please review.`);
                isCriticalChangeDetected = true;
                break;
              }
            }

            // Example: If critical change is detected, you could create a comment on the PR (similar to Welcome New Contributor workflow)
            if (isCriticalChangeDetected) {
                const { number: issue_number } = context.issue;
                github.rest.issues.createComment({ owner, repo, issue_number, body: 'Critical changes detected in Maintainers.yaml. Please review.' });
            }

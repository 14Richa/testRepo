name: Welcome New Contributor
on:
  pull_request:
    types: [closed]
    paths:
      - 'TSC_MEMBERS.json'
jobs:
  welcome:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          ref: main
          path: testRepo-main

      - name: Checkout new branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: testRepo

      - name: Compare files
        id: compare-files
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require("fs");
            const main_file = require('./testRepo-main/TSC_MEMBERS.json');
            const pr_file = require('./testRepo/TSC_MEMBERS.json');

            const added = pr_file.filter(
              (newObj) => !main_file.some((oldObj) => oldObj.github === newObj.github)
            );
            const removed = main_file.filter(
              (oldObj) => !pr_file.some((newObj) => newObj.github === oldObj.github)
            );

            if (added.length > 0) {
              core.info(`Added Contributors: ${JSON.stringify(added, null, 2)}`, {
                color: "red",
              });
              core.setOutput("newContributors", added.map((obj) => obj.github).join(","));
            }

            if (removed.length > 0) {
              core.info(`Removed Contributors: ${JSON.stringify(removed, null, 2)}`, {
                color: "red",
              });
              core.setOutput("removed", "true");
            }

            core.info('TSC members in main branch:');
            core.info(JSON.stringify(main_file, null, 2));
            core.info('Location of TSC members in main branch:');
            core.info(fs.realpathSync('./testRepo-main/TSC_MEMBERS.json'));
            core.info('TSC members in PR branch:');
            core.info(JSON.stringify(pr_file, null, 2));
            core.info('Location of TSC members in PR branch:');
            core.info(fs.realpathSync('./testRepo/TSC_MEMBERS.json'));

      - name: Debug newContributors output
        run: |
          echo "newContributors = ${{ steps.compare-files.outputs.newContributors }}"

      - name: Display welcome message
        if: steps.compare-files.outputs.newContributors != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const github = require("@actions/github");
            const newContributors = core.getInput("newContributors").split(",");
            const welcomeMessage = newContributors
              .map(
                (contributor) => `@${contributor.trim().replace(/^@/, '')} I have invited you to join the AsyncAPI organization and you will soon be added to the team that lists all TSC members.
              
              We use this team to mention in different discussions in different places in GitHub where TSC opinion is needed or even voting on some topic. Once TSC is mentioned:
              
              - You get GitHub notification
              - We also drop notification in our slack in #95_bot-tsc-members-mentioned channel
              - We drop an email to people that subscribed to TSC news here https://www.asyncapi.com/community/tsc
              
              Pick the channel for notifications that you prefer. Welcome aboard! We are excited to have you as part of the team.`
              )
              .join("\n");

            const { owner, repo } = github.context.repo;
            const { number: issue_number } = github.context.issue;
            return github.rest.issues.createComment({ owner, repo, issue_number, body: welcomeMessage });

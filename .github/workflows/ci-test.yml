name: Welcome New Contributor
on:
  pull_request_target:
    types: [opened]
    paths: 
      - '**.json'
    # paths:
    #   - './TSC_MEMBERS.json' 
jobs:
  welcome:
    if: github.event.pull_request.merged 
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Checkout reference repo
        uses: actions/checkout@v3
        with:
          repository: 14Richa/parentRepo1
          path: parentRepo1
      - name: Compare files
        id: compare-files
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require("fs");
            const origMembers = JSON.parse(fs.readFileSync("parentRepo1/config/TSC_MEMBER.json"));
            const newMembers = JSON.parse(fs.readFileSync("./TSC_MEMBERS.json"));  
            const added = newMembers.filter(
              (newObj) => !origMembers.some((oldObj) => oldObj.github === newObj.github)
            );
            const removed = origMembers.filter(
              (oldObj) => !newMembers.some((newObj) => newObj.github === oldObj.github)
            );
            if(added.length > 0)  console.log(`::set-output github=added::true`);
            if(removed.length > 0) console.log(`::set-output github=removed::true`);
            console.log("Added members:", added);
            console.log("Removed members:", removed);
      - name: Display welcome message
        if: ${{ steps.compare-files.outputs.added == 'true' }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.SECRET_TOKEN }}
          script: |
            const welcomeMessage = `Welcome to AsyncAPI. Thanks a lot for reporting your first issue. Please check out our [contributors guide](https://github.com/asyncapi/community/blob/master/CONTRIBUTING.md) and the instructions about a [basic recommended setup](https://github.com/asyncapi/community/blob/master/git-workflow.md) useful for opening a pull request.<br />Keep in mind there are also other channels you can use to interact with AsyncAPI community.`;
            const { owner, repo } = context.repo;
            const { number: issue_number } = context.issue;
            return github.issues.createComment({ owner, repo, issue_number, body: welcomeMessage });